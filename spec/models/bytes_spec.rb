require "rails_helper"

describe Bytes do
  let(:bytes) do
    bytes = [112, 99, 112, 10, # type(4byte)
             4,  0,   0,  0,   # size(4byte)
             1, 0, 0, 0,       # data(4byte)
             104, 101, 108, 111, 4, 0, 0, 128, 97, 103, 110, 116, 24, 0, 0, 0, 80, 101, 101, 114, 67, 97, 115, 116, 83, 116, 97, 116, 105, 111, 110, 47, 50, 46, 57, 46, 50, 46, 48, 0, 118, 101, 114, 0, 4, 0, 0, 0, 194, 4, 0, 0, 115, 105, 100, 0, 16, 0, 0, 0, 185, 158, 181, 225, 33, 131, 76, 251, 147, 47, 21, 102, 31, 180, 15, 234, 98, 99, 105, 100, 16, 0, 0, 0, 0, 34, 221, 27, 49, 232, 71, 189, 174, 211, 217, 44, 20, 132, 33, 60, 98, 99, 115, 116, 11, 0, 0, 128, 116, 116, 108, 0, 1, 0, 0, 0, 1, 104, 111, 112, 115, 1, 0, 0, 0, 0, 102, 114, 111, 109, 16, 0, 0, 0, 185, 158, 181, 225, 33, 131, 76, 251, 147, 47, 21, 102, 31, 180, 15, 234, 118, 101, 114, 115, 4, 0, 0, 0, 194, 4, 0, 0, 118, 114, 118, 112, 4, 0, 0, 0, 27, 0, 0, 0, 118, 101, 120, 112, 2, 0, 0, 0, 83, 84, 118, 101, 120, 110, 2, 0, 0, 0, 36, 1, 99, 105, 100, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 103, 114, 112, 0, 1, 0, 0, 0, 1, 99, 104, 97, 110, 4, 0, 0, 128, 105, 100, 0, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 98, 99, 105, 100, 16, 0, 0, 0, 0, 34, 221, 27, 49, 232, 71, 189, 174, 211, 217, 44, 20, 132, 33, 60, 105, 110, 102, 111, 6, 0, 0, 128, 110, 97, 109, 101, 31, 0, 0, 0, 227, 129, 151, 227, 129, 163, 227, 129, 139, 227, 130, 138, 227, 130, 183, 227, 131, 165, 227, 131, 188, 227, 131, 171, 239, 189, 131, 239, 189, 136, 0, 117, 114, 108, 0, 19, 0, 0, 0, 227, 130, 179, 227, 131, 179, 227, 130, 191, 227, 130, 175, 227, 131, 136, 85, 82, 76, 0, 103, 110, 114, 101, 13, 0, 0, 0, 227, 130, 184, 227, 131, 163, 227, 131, 179, 227, 131, 171, 0, 100, 101, 115, 99, 7, 0, 0, 0, 230, 166, 130, 232, 166, 129, 0, 99, 109, 110, 116, 22, 0, 0, 0, 233, 133, 141, 228, 191, 161, 232, 128, 133, 227, 130, 179, 227, 131, 161, 227, 131, 179, 227, 131, 136, 0, 98, 105, 116, 114, 4, 0, 0, 0, 210, 4, 0, 0, 116, 114, 99, 107, 5, 0, 0, 128, 116, 105, 116, 108, 13, 0, 0, 0, 227, 130, 191, 227, 130, 164, 227, 131, 136, 227, 131, 171, 0, 103, 110, 114, 101, 13, 0, 0, 0, 227, 130, 184, 227, 131, 163, 227, 131, 179, 227, 131, 171, 0, 97, 108, 98, 109, 13, 0, 0, 0, 227, 130, 162, 227, 131, 171, 227, 131, 144, 227, 131, 160, 0, 99, 114, 101, 97, 19, 0, 0, 0, 227, 130, 162, 227, 131, 188, 227, 131, 134, 227, 130, 163, 227, 130, 185, 227, 131, 136, 0, 117, 114, 108, 0, 4, 0, 0, 0, 85, 82, 76, 0, 104, 111, 115, 116, 12, 0, 0, 128, 99, 105, 100, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 105, 100, 0, 0, 16, 0, 0, 0, 185, 158, 181, 225, 33, 131, 76, 251, 147, 47, 21, 102, 31, 180, 15, 234, 105, 112, 0, 0, 4, 0, 0, 0, 5, 11, 168, 192, 112, 111, 114, 116, 2, 0, 0, 0, 184, 35, 110, 117, 109, 108, 4, 0, 0, 0, 0, 0, 0, 0, 110, 117, 109, 114, 4, 0, 0, 0, 0, 0, 0, 0, 117, 112, 116, 109, 4, 0, 0, 0, 0, 0, 0, 0, 118, 101, 114, 0, 4, 0, 0, 0, 194, 4, 0, 0, 118, 101, 118, 112, 4, 0, 0, 0, 27, 0, 0, 0, 118, 101, 120, 112, 2, 0, 0, 0, 83, 84, 118, 101, 120, 110, 2, 0, 0, 0, 36, 1, 102, 108, 103, 49, 1, 0, 0, 0, 15, 98, 99, 115, 116, 11, 0, 0, 128, 116, 116, 108, 0, 1, 0, 0, 0, 1, 104, 111, 112, 115, 1, 0, 0, 0, 0, 102, 114, 111, 109, 16, 0, 0, 0, 185, 158, 181, 225, 33, 131, 76, 251, 147, 47, 21, 102, 31, 180, 15, 234, 118, 101, 114, 115, 4, 0, 0, 0, 194, 4, 0, 0, 118, 114, 118, 112, 4, 0, 0, 0, 27, 0, 0, 0, 118, 101, 120, 112, 2, 0, 0, 0, 83, 84, 118, 101, 120, 110, 2, 0, 0, 0, 36, 1, 99, 105, 100, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 103, 114, 112, 0, 1, 0, 0, 0, 1, 99, 104, 97, 110, 4, 0, 0, 128, 105, 100, 0, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 98, 99, 105, 100, 16, 0, 0, 0, 0, 34, 221, 27, 49, 232, 71, 189, 174, 211, 217, 44, 20, 132, 33, 60, 105, 110, 102, 111, 6, 0, 0, 128, 110, 97, 109, 101, 31, 0, 0, 0, 227, 129, 151, 227, 129, 163, 227, 129, 139, 227, 130, 138, 227, 130, 183, 227, 131, 165, 227, 131, 188, 227, 131, 171, 239, 189, 131, 239, 189, 136, 0, 117, 114, 108, 0, 19, 0, 0, 0, 227, 130, 179, 227, 131, 179, 227, 130, 191, 227, 130, 175, 227, 131, 136, 85, 82, 76, 0, 103, 110, 114, 101, 13, 0, 0, 0, 227, 130, 184, 227, 131, 163, 227, 131, 179, 227, 131, 171, 0, 100, 101, 115, 99, 7, 0, 0, 0, 230, 166, 130, 232, 166, 129, 0, 99, 109, 110, 116, 22, 0, 0, 0, 233, 133, 141, 228, 191, 161, 232, 128, 133, 227, 130, 179, 227, 131, 161, 227, 131, 179, 227, 131, 136, 0, 98, 105, 116, 114, 4, 0, 0, 0, 210, 4, 0, 0, 116, 114, 99, 107, 5, 0, 0, 128, 116, 105, 116, 108, 13, 0, 0, 0, 227, 130, 191, 227, 130, 164, 227, 131, 136, 227, 131, 171, 0, 103, 110, 114, 101, 13, 0, 0, 0, 227, 130, 184, 227, 131, 163, 227, 131, 179, 227, 131, 171, 0, 97, 108, 98, 109, 13, 0, 0, 0, 227, 130, 162, 227, 131, 171, 227, 131, 144, 227, 131, 160, 0, 99, 114, 101, 97, 19, 0, 0, 0, 227, 130, 162, 227, 131, 188, 227, 131, 134, 227, 130, 163, 227, 130, 185, 227, 131, 136, 0, 117, 114, 108, 0, 4, 0, 0, 0, 85, 82, 76, 0, 104, 111, 115, 116, 12, 0, 0, 128, 99, 105, 100, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 105, 100, 0, 0, 16, 0, 0, 0, 185, 158, 181, 225, 33, 131, 76, 251, 147, 47, 21, 102, 31, 180, 15, 234, 105, 112, 0, 0, 4, 0, 0, 0, 5, 11, 168, 192, 112, 111, 114, 116, 2, 0, 0, 0, 184, 35, 110, 117, 109, 108, 4, 0, 0, 0, 0, 0, 0, 0, 110, 117, 109, 114, 4, 0, 0, 0, 0, 0, 0, 0, 117, 112, 116, 109, 4, 0, 0, 0, 0, 0, 0, 0, 118, 101, 114, 0, 4, 0, 0, 0, 194, 4, 0, 0, 118, 101, 118, 112, 4, 0, 0, 0, 27, 0, 0, 0, 118, 101, 120, 112, 2, 0, 0, 0, 83, 84, 118, 101, 120, 110, 2, 0, 0, 0, 36, 1, 102, 108, 103, 49, 1, 0, 0, 0, 15, 98, 99, 115, 116, 11, 0, 0, 128, 116, 116, 108, 0, 1, 0, 0, 0, 1, 104, 111, 112, 115, 1, 0, 0, 0, 0, 102, 114, 111, 109, 16, 0, 0, 0, 185, 158, 181, 225, 33, 131, 76, 251, 147, 47, 21, 102, 31, 180, 15, 234, 118, 101, 114, 115, 4, 0, 0, 0, 194, 4, 0, 0, 118, 114, 118, 112, 4, 0, 0, 0, 27, 0, 0, 0, 118, 101, 120, 112, 2, 0, 0, 0, 83, 84, 118, 101, 120, 110, 2, 0, 0, 0, 36, 1, 99, 105, 100, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 103, 114, 112, 0, 1, 0, 0, 0, 1, 99, 104, 97, 110, 4, 0, 0, 128, 105, 100, 0, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 98, 99, 105, 100, 16, 0, 0, 0, 0, 34, 221, 27, 49, 232, 71, 189, 174, 211, 217, 44, 20, 132, 33, 60, 105, 110, 102, 111, 6, 0, 0, 128, 110, 97, 109, 101, 31, 0, 0, 0, 227, 129, 151, 227, 129, 163, 227, 129, 139, 227, 130, 138, 227, 130, 183, 227, 131, 165, 227, 131, 188, 227, 131, 171, 239, 189, 131, 239, 189, 136, 0, 117, 114, 108, 0, 19, 0, 0, 0, 227, 130, 179, 227, 131, 179, 227, 130, 191, 227, 130, 175, 227, 131, 136, 85, 82, 76, 0, 103, 110, 114, 101, 13, 0, 0, 0, 227, 130, 184, 227, 131, 163, 227, 131, 179, 227, 131, 171, 0, 100, 101, 115, 99, 7, 0, 0, 0, 230, 166, 130, 232, 166, 129, 0, 99, 109, 110, 116, 22, 0, 0, 0, 233, 133, 141, 228, 191, 161, 232, 128, 133, 227, 130, 179, 227, 131, 161, 227, 131, 179, 227, 131, 136, 0, 98, 105, 116, 114, 4, 0, 0, 0, 210, 4, 0, 0, 116, 114, 99, 107, 5, 0, 0, 128, 116, 105, 116, 108, 13, 0, 0, 0, 227, 130, 191, 227, 130, 164, 227, 131, 136, 227, 131, 171, 0, 103, 110, 114, 101, 13, 0, 0, 0, 227, 130, 184, 227, 131, 163, 227, 131, 179, 227, 131, 171, 0, 97, 108, 98, 109, 13, 0, 0, 0, 227, 130, 162, 227, 131, 171, 227, 131, 144, 227, 131, 160, 0, 99, 114, 101, 97, 19, 0, 0, 0, 227, 130, 162, 227, 131, 188, 227, 131, 134, 227, 130, 163, 227, 130, 185, 227, 131, 136, 0, 117, 114, 108, 0, 4, 0, 0, 0, 85, 82, 76, 0, 104, 111, 115, 116, 12, 0, 0, 128, 99, 105, 100, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 105, 100, 0, 0, 16, 0, 0, 0, 185, 158, 181, 225, 33, 131, 76, 251, 147, 47, 21, 102, 31, 180, 15, 234, 105, 112, 0, 0, 4, 0, 0, 0, 5, 11, 168, 192, 112, 111, 114, 116, 2, 0, 0, 0, 184, 35, 110, 117, 109, 108, 4, 0, 0, 0, 0, 0, 0, 0, 110, 117, 109, 114, 4, 0, 0, 0, 0, 0, 0, 0, 117, 112, 116, 109, 4, 0, 0, 0, 0, 0, 0, 0, 118, 101, 114, 0, 4, 0, 0, 0, 194, 4, 0, 0, 118, 101, 118, 112, 4, 0, 0, 0, 27, 0, 0, 0, 118, 101, 120, 112, 2, 0, 0, 0, 83, 84, 118, 101, 120, 110, 2, 0, 0, 0, 36, 1, 102, 108, 103, 49, 1, 0, 0, 0, 15]
    Bytes.new(bytes)
  end

  describe '#[]' do
    it { expect(bytes[0..3].to_a).to eq [112, 99, 112, 10] }
  end

  describe '#substring' do
    subject { bytes.substring(start, length).to_a }

    let(:byte_array) do
      [112, 99, 112, 10, # type(4byte)
         4,  0,   0,  0, # size(4byte)
         1,  0,   0,  0] # data(4byte)
    end
    let(:bytes) { Bytes.new(byte_array) }

    context '開始位置が最初' do
      let(:start) { 0 }
      let(:length) { 4 }
      it { is_expected.to eq [112, 99, 112, 10] }
    end

    context '開始位置が途中' do
      let(:start) { 4 }
      let(:length) { 4 }
      it { is_expected.to eq [4, 0, 0, 0] }
    end
  end

  describe '#to_i' do
    subject { bytes.to_i }

    context '1桁目だけの場合' do
      let(:bytes) { Bytes.new([1, 0, 0, 0]) }
      it { is_expected.to eq 1 }
    end

    context '2桁目だけの場合' do
      let(:bytes) { Bytes.new([0, 1, 0, 0]) }
      it { is_expected.to eq 16 }
    end

    context '3桁目だけの場合' do
      let(:bytes) { Bytes.new([0, 0, 1, 0]) }
      it { is_expected.to eq 256 }
    end

    context '4桁目だけの場合' do
      let(:bytes) { Bytes.new([0, 0, 0, 1]) }
      it { is_expected.to eq 4096 }
    end

    context '1〜4桁の場合' do
      let(:bytes) { Bytes.new([1, 1, 1, 1]) }
      it { is_expected.to eq 1 + 16 + 256 + 4096 }
    end
  end

  describe '#to_s' do
    subject { bytes.to_s }
    let(:bytes) { Bytes.new([112, 99, 112, 10]) }
    it { is_expected.to eq "pcp\n" }
  end
end
