require "rails_helper"

describe Atom do
  let(:bytes) do
    [112, 99, 112, 10, # type(4byte)
     4,  0,   0,  0,   # size(4byte)
     1, 0, 0, 0,       # data(4byte)
     104, 101, 108, 111, 4, 0, 0, 128, 97, 103, 110, 116, 24, 0, 0, 0, 80, 101, 101, 114, 67, 97, 115, 116, 83, 116, 97, 116, 105, 111, 110, 47, 50, 46, 57, 46, 50, 46, 48, 0, 118, 101, 114, 0, 4, 0, 0, 0, 194, 4, 0, 0, 115, 105, 100, 0, 16, 0, 0, 0, 185, 158, 181, 225, 33, 131, 76, 251, 147, 47, 21, 102, 31, 180, 15, 234, 98, 99, 105, 100, 16, 0, 0, 0, 0, 34, 221, 27, 49, 232, 71, 189, 174, 211, 217, 44, 20, 132, 33, 60, 98, 99, 115, 116, 11, 0, 0, 128, 116, 116, 108, 0, 1, 0, 0, 0, 1, 104, 111, 112, 115, 1, 0, 0, 0, 0, 102, 114, 111, 109, 16, 0, 0, 0, 185, 158, 181, 225, 33, 131, 76, 251, 147, 47, 21, 102, 31, 180, 15, 234, 118, 101, 114, 115, 4, 0, 0, 0, 194, 4, 0, 0, 118, 114, 118, 112, 4, 0, 0, 0, 27, 0, 0, 0, 118, 101, 120, 112, 2, 0, 0, 0, 83, 84, 118, 101, 120, 110, 2, 0, 0, 0, 36, 1, 99, 105, 100, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 103, 114, 112, 0, 1, 0, 0, 0, 1, 99, 104, 97, 110, 4, 0, 0, 128, 105, 100, 0, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 98, 99, 105, 100, 16, 0, 0, 0, 0, 34, 221, 27, 49, 232, 71, 189, 174, 211, 217, 44, 20, 132, 33, 60, 105, 110, 102, 111, 6, 0, 0, 128, 110, 97, 109, 101, 31, 0, 0, 0, 227, 129, 151, 227, 129, 163, 227, 129, 139, 227, 130, 138, 227, 130, 183, 227, 131, 165, 227, 131, 188, 227, 131, 171, 239, 189, 131, 239, 189, 136, 0, 117, 114, 108, 0, 19, 0, 0, 0, 227, 130, 179, 227, 131, 179, 227, 130, 191, 227, 130, 175, 227, 131, 136, 85, 82, 76, 0, 103, 110, 114, 101, 13, 0, 0, 0, 227, 130, 184, 227, 131, 163, 227, 131, 179, 227, 131, 171, 0, 100, 101, 115, 99, 7, 0, 0, 0, 230, 166, 130, 232, 166, 129, 0, 99, 109, 110, 116, 22, 0, 0, 0, 233, 133, 141, 228, 191, 161, 232, 128, 133, 227, 130, 179, 227, 131, 161, 227, 131, 179, 227, 131, 136, 0, 98, 105, 116, 114, 4, 0, 0, 0, 210, 4, 0, 0, 116, 114, 99, 107, 5, 0, 0, 128, 116, 105, 116, 108, 13, 0, 0, 0, 227, 130, 191, 227, 130, 164, 227, 131, 136, 227, 131, 171, 0, 103, 110, 114, 101, 13, 0, 0, 0, 227, 130, 184, 227, 131, 163, 227, 131, 179, 227, 131, 171, 0, 97, 108, 98, 109, 13, 0, 0, 0, 227, 130, 162, 227, 131, 171, 227, 131, 144, 227, 131, 160, 0, 99, 114, 101, 97, 19, 0, 0, 0, 227, 130, 162, 227, 131, 188, 227, 131, 134, 227, 130, 163, 227, 130, 185, 227, 131, 136, 0, 117, 114, 108, 0, 4, 0, 0, 0, 85, 82, 76, 0, 104, 111, 115, 116, 12, 0, 0, 128, 99, 105, 100, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 105, 100, 0, 0, 16, 0, 0, 0, 185, 158, 181, 225, 33, 131, 76, 251, 147, 47, 21, 102, 31, 180, 15, 234, 105, 112, 0, 0, 4, 0, 0, 0, 5, 11, 168, 192, 112, 111, 114, 116, 2, 0, 0, 0, 184, 35, 110, 117, 109, 108, 4, 0, 0, 0, 0, 0, 0, 0, 110, 117, 109, 114, 4, 0, 0, 0, 0, 0, 0, 0, 117, 112, 116, 109, 4, 0, 0, 0, 0, 0, 0, 0, 118, 101, 114, 0, 4, 0, 0, 0, 194, 4, 0, 0, 118, 101, 118, 112, 4, 0, 0, 0, 27, 0, 0, 0, 118, 101, 120, 112, 2, 0, 0, 0, 83, 84, 118, 101, 120, 110, 2, 0, 0, 0, 36, 1, 102, 108, 103, 49, 1, 0, 0, 0, 15, 98, 99, 115, 116, 11, 0, 0, 128, 116, 116, 108, 0, 1, 0, 0, 0, 1, 104, 111, 112, 115, 1, 0, 0, 0, 0, 102, 114, 111, 109, 16, 0, 0, 0, 185, 158, 181, 225, 33, 131, 76, 251, 147, 47, 21, 102, 31, 180, 15, 234, 118, 101, 114, 115, 4, 0, 0, 0, 194, 4, 0, 0, 118, 114, 118, 112, 4, 0, 0, 0, 27, 0, 0, 0, 118, 101, 120, 112, 2, 0, 0, 0, 83, 84, 118, 101, 120, 110, 2, 0, 0, 0, 36, 1, 99, 105, 100, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 103, 114, 112, 0, 1, 0, 0, 0, 1, 99, 104, 97, 110, 4, 0, 0, 128, 105, 100, 0, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 98, 99, 105, 100, 16, 0, 0, 0, 0, 34, 221, 27, 49, 232, 71, 189, 174, 211, 217, 44, 20, 132, 33, 60, 105, 110, 102, 111, 6, 0, 0, 128, 110, 97, 109, 101, 31, 0, 0, 0, 227, 129, 151, 227, 129, 163, 227, 129, 139, 227, 130, 138, 227, 130, 183, 227, 131, 165, 227, 131, 188, 227, 131, 171, 239, 189, 131, 239, 189, 136, 0, 117, 114, 108, 0, 19, 0, 0, 0, 227, 130, 179, 227, 131, 179, 227, 130, 191, 227, 130, 175, 227, 131, 136, 85, 82, 76, 0, 103, 110, 114, 101, 13, 0, 0, 0, 227, 130, 184, 227, 131, 163, 227, 131, 179, 227, 131, 171, 0, 100, 101, 115, 99, 7, 0, 0, 0, 230, 166, 130, 232, 166, 129, 0, 99, 109, 110, 116, 22, 0, 0, 0, 233, 133, 141, 228, 191, 161, 232, 128, 133, 227, 130, 179, 227, 131, 161, 227, 131, 179, 227, 131, 136, 0, 98, 105, 116, 114, 4, 0, 0, 0, 210, 4, 0, 0, 116, 114, 99, 107, 5, 0, 0, 128, 116, 105, 116, 108, 13, 0, 0, 0, 227, 130, 191, 227, 130, 164, 227, 131, 136, 227, 131, 171, 0, 103, 110, 114, 101, 13, 0, 0, 0, 227, 130, 184, 227, 131, 163, 227, 131, 179, 227, 131, 171, 0, 97, 108, 98, 109, 13, 0, 0, 0, 227, 130, 162, 227, 131, 171, 227, 131, 144, 227, 131, 160, 0, 99, 114, 101, 97, 19, 0, 0, 0, 227, 130, 162, 227, 131, 188, 227, 131, 134, 227, 130, 163, 227, 130, 185, 227, 131, 136, 0, 117, 114, 108, 0, 4, 0, 0, 0, 85, 82, 76, 0, 104, 111, 115, 116, 12, 0, 0, 128, 99, 105, 100, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 105, 100, 0, 0, 16, 0, 0, 0, 185, 158, 181, 225, 33, 131, 76, 251, 147, 47, 21, 102, 31, 180, 15, 234, 105, 112, 0, 0, 4, 0, 0, 0, 5, 11, 168, 192, 112, 111, 114, 116, 2, 0, 0, 0, 184, 35, 110, 117, 109, 108, 4, 0, 0, 0, 0, 0, 0, 0, 110, 117, 109, 114, 4, 0, 0, 0, 0, 0, 0, 0, 117, 112, 116, 109, 4, 0, 0, 0, 0, 0, 0, 0, 118, 101, 114, 0, 4, 0, 0, 0, 194, 4, 0, 0, 118, 101, 118, 112, 4, 0, 0, 0, 27, 0, 0, 0, 118, 101, 120, 112, 2, 0, 0, 0, 83, 84, 118, 101, 120, 110, 2, 0, 0, 0, 36, 1, 102, 108, 103, 49, 1, 0, 0, 0, 15, 98, 99, 115, 116, 11, 0, 0, 128, 116, 116, 108, 0, 1, 0, 0, 0, 1, 104, 111, 112, 115, 1, 0, 0, 0, 0, 102, 114, 111, 109, 16, 0, 0, 0, 185, 158, 181, 225, 33, 131, 76, 251, 147, 47, 21, 102, 31, 180, 15, 234, 118, 101, 114, 115, 4, 0, 0, 0, 194, 4, 0, 0, 118, 114, 118, 112, 4, 0, 0, 0, 27, 0, 0, 0, 118, 101, 120, 112, 2, 0, 0, 0, 83, 84, 118, 101, 120, 110, 2, 0, 0, 0, 36, 1, 99, 105, 100, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 103, 114, 112, 0, 1, 0, 0, 0, 1, 99, 104, 97, 110, 4, 0, 0, 128, 105, 100, 0, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 98, 99, 105, 100, 16, 0, 0, 0, 0, 34, 221, 27, 49, 232, 71, 189, 174, 211, 217, 44, 20, 132, 33, 60, 105, 110, 102, 111, 6, 0, 0, 128, 110, 97, 109, 101, 31, 0, 0, 0, 227, 129, 151, 227, 129, 163, 227, 129, 139, 227, 130, 138, 227, 130, 183, 227, 131, 165, 227, 131, 188, 227, 131, 171, 239, 189, 131, 239, 189, 136, 0, 117, 114, 108, 0, 19, 0, 0, 0, 227, 130, 179, 227, 131, 179, 227, 130, 191, 227, 130, 175, 227, 131, 136, 85, 82, 76, 0, 103, 110, 114, 101, 13, 0, 0, 0, 227, 130, 184, 227, 131, 163, 227, 131, 179, 227, 131, 171, 0, 100, 101, 115, 99, 7, 0, 0, 0, 230, 166, 130, 232, 166, 129, 0, 99, 109, 110, 116, 22, 0, 0, 0, 233, 133, 141, 228, 191, 161, 232, 128, 133, 227, 130, 179, 227, 131, 161, 227, 131, 179, 227, 131, 136, 0, 98, 105, 116, 114, 4, 0, 0, 0, 210, 4, 0, 0, 116, 114, 99, 107, 5, 0, 0, 128, 116, 105, 116, 108, 13, 0, 0, 0, 227, 130, 191, 227, 130, 164, 227, 131, 136, 227, 131, 171, 0, 103, 110, 114, 101, 13, 0, 0, 0, 227, 130, 184, 227, 131, 163, 227, 131, 179, 227, 131, 171, 0, 97, 108, 98, 109, 13, 0, 0, 0, 227, 130, 162, 227, 131, 171, 227, 131, 144, 227, 131, 160, 0, 99, 114, 101, 97, 19, 0, 0, 0, 227, 130, 162, 227, 131, 188, 227, 131, 134, 227, 130, 163, 227, 130, 185, 227, 131, 136, 0, 117, 114, 108, 0, 4, 0, 0, 0, 85, 82, 76, 0, 104, 111, 115, 116, 12, 0, 0, 128, 99, 105, 100, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 105, 100, 0, 0, 16, 0, 0, 0, 185, 158, 181, 225, 33, 131, 76, 251, 147, 47, 21, 102, 31, 180, 15, 234, 105, 112, 0, 0, 4, 0, 0, 0, 5, 11, 168, 192, 112, 111, 114, 116, 2, 0, 0, 0, 184, 35, 110, 117, 109, 108, 4, 0, 0, 0, 0, 0, 0, 0, 110, 117, 109, 114, 4, 0, 0, 0, 0, 0, 0, 0, 117, 112, 116, 109, 4, 0, 0, 0, 0, 0, 0, 0, 118, 101, 114, 0, 4, 0, 0, 0, 194, 4, 0, 0, 118, 101, 118, 112, 4, 0, 0, 0, 27, 0, 0, 0, 118, 101, 120, 112, 2, 0, 0, 0, 83, 84, 118, 101, 120, 110, 2, 0, 0, 0, 36, 1, 102, 108, 103, 49, 1, 0, 0, 0, 15].to_bytes
  end
  let(:atom) { Atom.new(bytes) }

  describe "#type" do
    it { expect(atom.type).to eq "pcp\n" }
  end

  describe "#size" do
    it { expect(atom.size).to eq 4 }
  end

  describe '#data' do
    it { expect(atom.data.to_a).to eq [1, 0, 0, 0] }
  end

  describe '#number_of_bytes_required' do
    subject { atom.number_of_bytes_required }

    context '' do
      let(:bytes) { [].to_bytes }
      it { is_expected.to eq 8 }
    end

    context '子Atomが存在しない場合' do
      context 'ヘッダーのみの場合' do
        let(:bytes) do
          [112, 99, 112, 10, # type(4byte)
             4,  0,   0,  0] # size(4byte)
              .to_bytes
        end
        it do
          is_expected.to eq 4
        end
      end

      context 'ヘッダー＋データの場合' do
        let(:bytes) do
          [112, 99, 112, 10, # type(4byte)
             4,  0,   0,  0, # size(4byte)
             1,  0,   0,  0] # data(4byte)
              .to_bytes
        end

        it do
          is_expected.to eq 0
        end
      end
    end

    context '子Atomが存在する場合' do
      context 'ヘッダーのみの場合' do
        let(:bytes) do
          [104, 101, 108, 111, # type: helo
             4,   0,   0, 128] # size(4byte)
              .to_bytes
        end
        it do
          is_expected.to eq 8
        end
      end

      context 'ヘッダー+データの場合' do
        let(:bytes) do
          [104, 101, 108, 111, # type: helo
             4,   0,   0, 128, # size: 4 & has_children
            97, 103, 110, 116, # type: agnt
            24,   0,   0,   0] # size: 24
              .to_bytes
        end
        it do
          is_expected.to eq 24
        end
      end

      context 'ヘッダー+データの場合' do
        let(:bytes) do
          [104, 101, 108, 111, # type: helo
           4,   0,   0, 128,   # size: 4 & has_children
           97, 103, 110, 116,  # type: agnt
           24,   0,   0,   0,  # size: 24
           80, 101, 101, 114, 67, 97, 115, 116, 83, 116, 97, 116, 105, 111, 110, 47, 50, 46, 57, 46, 50, 46, 48, 0]
              .to_bytes
        end
        it do
          is_expected.to eq 8
        end
      end

      context 'ヘッダー+データの場合' do
        let(:bytes) do
          [104, 101, 108, 111, # type: helo
           4,   0,   0, 128,   # size: 4 & has_children
           97, 103, 110, 116,  # type: agnt
           24,   0,   0,   0,  # size: 24
           80, 101, 101, 114, 67, 97, 115, 116, 83, 116, 97, 116, 105, 111, 110, 47, 50, 46, 57, 46, 50, 46, 48, 0,
           118, 101, 114, 0, # type: ver\x00
           4, 0, 0, 0] # size: 4
              .to_bytes
        end
        it do
          is_expected.to eq 4
        end
      end

      context 'ヘッダー+データの場合' do
        let(:bytes) do
          [104, 101, 108, 111, # type: helo
           4,   0,   0, 128,   # size: 4 & has_children

           97, 103, 110, 116,  # type: agnt
           24,   0,   0,   0,  # size: 24
           80, 101, 101, 114, 67, 97, 115, 116, 83, 116, 97, 116, 105, 111, 110, 47, 50, 46, 57, 46, 50, 46, 48, 0,

           118, 101, 114, 0, # type: ver\x00
           4, 0, 0, 0, # size: 4
           194, 4, 0, 0]
              .to_bytes
        end
        it do
          is_expected.to eq 8
        end
      end

      context 'ヘッダー+データの場合' do
        let(:bytes) do
          [104, 101, 108, 111, # type: helo
           4,   0,   0, 128,   # size: 4 & has_children

           97, 103, 110, 116,  # type: agnt
           24,   0,   0,   0,  # size: 24
           80, 101, 101, 114, 67, 97, 115, 116, 83, 116, 97, 116, 105, 111, 110, 47, 50, 46, 57, 46, 50, 46, 48, 0,

           118, 101, 114, 0, # type: ver\x00
           4, 0, 0, 0, # size: 4
           194, 4, 0, 0,

           115, 105, 100, 0, # type: sid\x00
           16, 0, 0, 0] # size: 16
              .to_bytes
        end
        it do
          is_expected.to eq 16
        end
      end

      context 'ヘッダー+データの場合' do
        let(:bytes) do
          [104, 101, 108, 111, # type: helo
           4,   0,   0, 128,   # size: 4 & has_children

           97, 103, 110, 116,  # type: agnt
           24,   0,   0,   0,  # size: 24
           80, 101, 101, 114, 67, 97, 115, 116, 83, 116, 97, 116, 105, 111, 110, 47, 50, 46, 57, 46, 50, 46, 48, 0,

           118, 101, 114, 0, # type: ver\x00
           4, 0, 0, 0, # size: 4
           194, 4, 0, 0,

           115, 105, 100, 0, # type: sid\x00
           16, 0, 0, 0, # size: 16
           185, 158, 181, 225, 33, 131, 76, 251, 147, 47, 21, 102, 31, 180, 15, 234]
              .to_bytes
        end
        it do
          is_expected.to eq 8
        end
      end

      context 'ヘッダー+データの場合' do
        let(:bytes) do
          [104, 101, 108, 111, # type: helo
           4,   0,   0, 128,   # size: 4 & has_children

           97, 103, 110, 116,  # type: agnt
           24,   0,   0,   0,  # size: 24
           80, 101, 101, 114, 67, 97, 115, 116, 83, 116, 97, 116, 105, 111, 110, 47, 50, 46, 57, 46, 50, 46, 48, 0,

           118, 101, 114, 0, # type: ver\x00
           4, 0, 0, 0, # size: 4
           194, 4, 0, 0,

           115, 105, 100, 0, # type: sid\x00
           16, 0, 0, 0, # size: 16
           185, 158, 181, 225, 33, 131, 76, 251, 147, 47, 21, 102, 31, 180, 15, 234,

           98, 99, 105, 100, # type: bcid
           16, 0, 0, 0] # size: 16
              .to_bytes
        end
        it do
          is_expected.to eq 16
        end
      end

      context 'ヘッダー+データの場合' do
        let(:bytes) do
          [104, 101, 108, 111, # type: helo
           4,   0,   0, 128,   # size: 4 & has_children

           97, 103, 110, 116,  # type: agnt
           24,   0,   0,   0,  # size: 24
           80, 101, 101, 114, 67, 97, 115, 116, 83, 116, 97, 116, 105, 111, 110, 47, 50, 46, 57, 46, 50, 46, 48, 0,

           118, 101, 114, 0, # type: ver\x00
           4, 0, 0, 0, # size: 4
           194, 4, 0, 0,

           115, 105, 100, 0, # type: sid\x00
           16, 0, 0, 0, # size: 16
           185, 158, 181, 225, 33, 131, 76, 251, 147, 47, 21, 102, 31, 180, 15, 234,

           98, 99, 105, 100, # type: bcid
           16, 0, 0, 0, # size: 16
           0, 34, 221, 27, 49, 232, 71, 189, 174, 211, 217, 44, 20, 132, 33, 60]
              .to_bytes
        end
        it do
          is_expected.to eq 8
        end
      end
    end
  end

  describe 'heloコマンド' do
    let(:bytes) do
      [104, 101, 108, 111, # type: helo
         4,   0,   0, 128, # size(4byte)

        97, 103, 110, 116, # data(4byte)
       24, 0, 0, 0, 80, 101, 101, 114, 67, 97, 115, 116, 83, 116, 97, 116, 105, 111, 110, 47, 50, 46, 57, 46, 50, 46, 48, 0, 118, 101, 114, 0, 4, 0, 0, 0, 194, 4, 0, 0, 115, 105, 100, 0, 16, 0, 0, 0, 185, 158, 181, 225, 33, 131, 76, 251, 147, 47, 21, 102, 31, 180, 15, 234, 98, 99, 105, 100, 16, 0, 0, 0, 0, 34, 221, 27, 49, 232, 71, 189, 174, 211, 217, 44, 20, 132, 33, 60, 98, 99, 115, 116, 11, 0, 0, 128, 116, 116, 108, 0, 1, 0, 0, 0, 1, 104, 111, 112, 115, 1, 0, 0, 0, 0, 102, 114, 111, 109, 16, 0, 0, 0, 185, 158, 181, 225, 33, 131, 76, 251, 147, 47, 21, 102, 31, 180, 15, 234, 118, 101, 114, 115, 4, 0, 0, 0, 194, 4, 0, 0, 118, 114, 118, 112, 4, 0, 0, 0, 27, 0, 0, 0, 118, 101, 120, 112, 2, 0, 0, 0, 83, 84, 118, 101, 120, 110, 2, 0, 0, 0, 36, 1, 99, 105, 100, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 103, 114, 112, 0, 1, 0, 0, 0, 1, 99, 104, 97, 110, 4, 0, 0, 128, 105, 100, 0, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 98, 99, 105, 100, 16, 0, 0, 0, 0, 34, 221, 27, 49, 232, 71, 189, 174, 211, 217, 44, 20, 132, 33, 60, 105, 110, 102, 111, 6, 0, 0, 128, 110, 97, 109, 101, 31, 0, 0, 0, 227, 129, 151, 227, 129, 163, 227, 129, 139, 227, 130, 138, 227, 130, 183, 227, 131, 165, 227, 131, 188, 227, 131, 171, 239, 189, 131, 239, 189, 136, 0, 117, 114, 108, 0, 19, 0, 0, 0, 227, 130, 179, 227, 131, 179, 227, 130, 191, 227, 130, 175, 227, 131, 136, 85, 82, 76, 0, 103, 110, 114, 101, 13, 0, 0, 0, 227, 130, 184, 227, 131, 163, 227, 131, 179, 227, 131, 171, 0, 100, 101, 115, 99, 7, 0, 0, 0, 230, 166, 130, 232, 166, 129, 0, 99, 109, 110, 116, 22, 0, 0, 0, 233, 133, 141, 228, 191, 161, 232, 128, 133, 227, 130, 179, 227, 131, 161, 227, 131, 179, 227, 131, 136, 0, 98, 105, 116, 114, 4, 0, 0, 0, 210, 4, 0, 0, 116, 114, 99, 107, 5, 0, 0, 128, 116, 105, 116, 108, 13, 0, 0, 0, 227, 130, 191, 227, 130, 164, 227, 131, 136, 227, 131, 171, 0, 103, 110, 114, 101, 13, 0, 0, 0, 227, 130, 184, 227, 131, 163, 227, 131, 179, 227, 131, 171, 0, 97, 108, 98, 109, 13, 0, 0, 0, 227, 130, 162, 227, 131, 171, 227, 131, 144, 227, 131, 160, 0, 99, 114, 101, 97, 19, 0, 0, 0, 227, 130, 162, 227, 131, 188, 227, 131, 134, 227, 130, 163, 227, 130, 185, 227, 131, 136, 0, 117, 114, 108, 0, 4, 0, 0, 0, 85, 82, 76, 0, 104, 111, 115, 116, 12, 0, 0, 128, 99, 105, 100, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 105, 100, 0, 0, 16, 0, 0, 0, 185, 158, 181, 225, 33, 131, 76, 251, 147, 47, 21, 102, 31, 180, 15, 234, 105, 112, 0, 0, 4, 0, 0, 0, 5, 11, 168, 192, 112, 111, 114, 116, 2, 0, 0, 0, 184, 35, 110, 117, 109, 108, 4, 0, 0, 0, 0, 0, 0, 0, 110, 117, 109, 114, 4, 0, 0, 0, 0, 0, 0, 0, 117, 112, 116, 109, 4, 0, 0, 0, 0, 0, 0, 0, 118, 101, 114, 0, 4, 0, 0, 0, 194, 4, 0, 0, 118, 101, 118, 112, 4, 0, 0, 0, 27, 0, 0, 0, 118, 101, 120, 112, 2, 0, 0, 0, 83, 84, 118, 101, 120, 110, 2, 0, 0, 0, 36, 1, 102, 108, 103, 49, 1, 0, 0, 0, 15, 98, 99, 115, 116, 11, 0, 0, 128, 116, 116, 108, 0, 1, 0, 0, 0, 1, 104, 111, 112, 115, 1, 0, 0, 0, 0, 102, 114, 111, 109, 16, 0, 0, 0, 185, 158, 181, 225, 33, 131, 76, 251, 147, 47, 21, 102, 31, 180, 15, 234, 118, 101, 114, 115, 4, 0, 0, 0, 194, 4, 0, 0, 118, 114, 118, 112, 4, 0, 0, 0, 27, 0, 0, 0, 118, 101, 120, 112, 2, 0, 0, 0, 83, 84, 118, 101, 120, 110, 2, 0, 0, 0, 36, 1, 99, 105, 100, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 103, 114, 112, 0, 1, 0, 0, 0, 1, 99, 104, 97, 110, 4, 0, 0, 128, 105, 100, 0, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 98, 99, 105, 100, 16, 0, 0, 0, 0, 34, 221, 27, 49, 232, 71, 189, 174, 211, 217, 44, 20, 132, 33, 60, 105, 110, 102, 111, 6, 0, 0, 128, 110, 97, 109, 101, 31, 0, 0, 0, 227, 129, 151, 227, 129, 163, 227, 129, 139, 227, 130, 138, 227, 130, 183, 227, 131, 165, 227, 131, 188, 227, 131, 171, 239, 189, 131, 239, 189, 136, 0, 117, 114, 108, 0, 19, 0, 0, 0, 227, 130, 179, 227, 131, 179, 227, 130, 191, 227, 130, 175, 227, 131, 136, 85, 82, 76, 0, 103, 110, 114, 101, 13, 0, 0, 0, 227, 130, 184, 227, 131, 163, 227, 131, 179, 227, 131, 171, 0, 100, 101, 115, 99, 7, 0, 0, 0, 230, 166, 130, 232, 166, 129, 0, 99, 109, 110, 116, 22, 0, 0, 0, 233, 133, 141, 228, 191, 161, 232, 128, 133, 227, 130, 179, 227, 131, 161, 227, 131, 179, 227, 131, 136, 0, 98, 105, 116, 114, 4, 0, 0, 0, 210, 4, 0, 0, 116, 114, 99, 107, 5, 0, 0, 128, 116, 105, 116, 108, 13, 0, 0, 0, 227, 130, 191, 227, 130, 164, 227, 131, 136, 227, 131, 171, 0, 103, 110, 114, 101, 13, 0, 0, 0, 227, 130, 184, 227, 131, 163, 227, 131, 179, 227, 131, 171, 0, 97, 108, 98, 109, 13, 0, 0, 0, 227, 130, 162, 227, 131, 171, 227, 131, 144, 227, 131, 160, 0, 99, 114, 101, 97, 19, 0, 0, 0, 227, 130, 162, 227, 131, 188, 227, 131, 134, 227, 130, 163, 227, 130, 185, 227, 131, 136, 0, 117, 114, 108, 0, 4, 0, 0, 0, 85, 82, 76, 0, 104, 111, 115, 116, 12, 0, 0, 128, 99, 105, 100, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 105, 100, 0, 0, 16, 0, 0, 0, 185, 158, 181, 225, 33, 131, 76, 251, 147, 47, 21, 102, 31, 180, 15, 234, 105, 112, 0, 0, 4, 0, 0, 0, 5, 11, 168, 192, 112, 111, 114, 116, 2, 0, 0, 0, 184, 35, 110, 117, 109, 108, 4, 0, 0, 0, 0, 0, 0, 0, 110, 117, 109, 114, 4, 0, 0, 0, 0, 0, 0, 0, 117, 112, 116, 109, 4, 0, 0, 0, 0, 0, 0, 0, 118, 101, 114, 0, 4, 0, 0, 0, 194, 4, 0, 0, 118, 101, 118, 112, 4, 0, 0, 0, 27, 0, 0, 0, 118, 101, 120, 112, 2, 0, 0, 0, 83, 84, 118, 101, 120, 110, 2, 0, 0, 0, 36, 1, 102, 108, 103, 49, 1, 0, 0, 0, 15, 98, 99, 115, 116, 11, 0, 0, 128, 116, 116, 108, 0, 1, 0, 0, 0, 1, 104, 111, 112, 115, 1, 0, 0, 0, 0, 102, 114, 111, 109, 16, 0, 0, 0, 185, 158, 181, 225, 33, 131, 76, 251, 147, 47, 21, 102, 31, 180, 15, 234, 118, 101, 114, 115, 4, 0, 0, 0, 194, 4, 0, 0, 118, 114, 118, 112, 4, 0, 0, 0, 27, 0, 0, 0, 118, 101, 120, 112, 2, 0, 0, 0, 83, 84, 118, 101, 120, 110, 2, 0, 0, 0, 36, 1, 99, 105, 100, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 103, 114, 112, 0, 1, 0, 0, 0, 1, 99, 104, 97, 110, 4, 0, 0, 128, 105, 100, 0, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 98, 99, 105, 100, 16, 0, 0, 0, 0, 34, 221, 27, 49, 232, 71, 189, 174, 211, 217, 44, 20, 132, 33, 60, 105, 110, 102, 111, 6, 0, 0, 128, 110, 97, 109, 101, 31, 0, 0, 0, 227, 129, 151, 227, 129, 163, 227, 129, 139, 227, 130, 138, 227, 130, 183, 227, 131, 165, 227, 131, 188, 227, 131, 171, 239, 189, 131, 239, 189, 136, 0, 117, 114, 108, 0, 19, 0, 0, 0, 227, 130, 179, 227, 131, 179, 227, 130, 191, 227, 130, 175, 227, 131, 136, 85, 82, 76, 0, 103, 110, 114, 101, 13, 0, 0, 0, 227, 130, 184, 227, 131, 163, 227, 131, 179, 227, 131, 171, 0, 100, 101, 115, 99, 7, 0, 0, 0, 230, 166, 130, 232, 166, 129, 0, 99, 109, 110, 116, 22, 0, 0, 0, 233, 133, 141, 228, 191, 161, 232, 128, 133, 227, 130, 179, 227, 131, 161, 227, 131, 179, 227, 131, 136, 0, 98, 105, 116, 114, 4, 0, 0, 0, 210, 4, 0, 0, 116, 114, 99, 107, 5, 0, 0, 128, 116, 105, 116, 108, 13, 0, 0, 0, 227, 130, 191, 227, 130, 164, 227, 131, 136, 227, 131, 171, 0, 103, 110, 114, 101, 13, 0, 0, 0, 227, 130, 184, 227, 131, 163, 227, 131, 179, 227, 131, 171, 0, 97, 108, 98, 109, 13, 0, 0, 0, 227, 130, 162, 227, 131, 171, 227, 131, 144, 227, 131, 160, 0, 99, 114, 101, 97, 19, 0, 0, 0, 227, 130, 162, 227, 131, 188, 227, 131, 134, 227, 130, 163, 227, 130, 185, 227, 131, 136, 0, 117, 114, 108, 0, 4, 0, 0, 0, 85, 82, 76, 0, 104, 111, 115, 116, 12, 0, 0, 128, 99, 105, 100, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 105, 100, 0, 0, 16, 0, 0, 0, 185, 158, 181, 225, 33, 131, 76, 251, 147, 47, 21, 102, 31, 180, 15, 234, 105, 112, 0, 0, 4, 0, 0, 0, 5, 11, 168, 192, 112, 111, 114, 116, 2, 0, 0, 0, 184, 35, 110, 117, 109, 108, 4, 0, 0, 0, 0, 0, 0, 0, 110, 117, 109, 114, 4, 0, 0, 0, 0, 0, 0, 0, 117, 112, 116, 109, 4, 0, 0, 0, 0, 0, 0, 0, 118, 101, 114, 0, 4, 0, 0, 0, 194, 4, 0, 0, 118, 101, 118, 112, 4, 0, 0, 0, 27, 0, 0, 0, 118, 101, 120, 112, 2, 0, 0, 0, 83, 84, 118, 101, 120, 110, 2, 0, 0, 0, 36, 1, 102, 108, 103, 49, 1, 0, 0, 0, 15].to_bytes
    end

    it do
      expect(atom.type).to eq "helo"
      expect(atom.has_children?).to eq true
      expect(atom.size).to eq 4

      expect(atom.children.size).to eq 4

      atom1 = atom.children[0]
      atom2 = atom.children[1]
      atom3 = atom.children[2]
      atom4 = atom.children[3]

      expect(atom1.type).to eq "agnt"
      expect(atom1.has_children?).to eq false
      expect(atom1.size).to eq 24
      expect(atom1.data.to_s).to eq "PeerCastStation/2.9.2.0\x00"

      expect(atom2.type).to eq "ver\x00"
      expect(atom2.has_children?).to eq false
      expect(atom2.size).to eq 4
      expect(atom2.data.to_hex).to eq "C2400"

      expect(atom3.type).to eq "sid\x00"
      expect(atom3.has_children?).to eq false
      expect(atom3.size).to eq 16
      expect(atom3.data.to_hex).to eq "B99EB5E121834CFB932F15661FB4FEA"

      expect(atom4.type).to eq "bcid"
      expect(atom4.has_children?).to eq false
      expect(atom4.size).to eq 16
      expect(atom4.data.to_hex).to eq "022DD1B31E847BDAED3D92C1484213C"

      atom5 = atom4.next

      expect(atom5.type).to eq "bcst"
      expect(atom5.has_children?).to eq true
      expect(atom5.size).to eq 11
      expect(atom5.data.to_hex).to eq "74746C010001686F"

      expect(atom.data.to_a).to eq [97, 103, 110, 116]
      pp type: atom.type, has_children: atom.has_children?, size: atom.size, data: atom.data.to_s
    end
  end

  describe 'bcstコマンド' do
    let(:bytes) do
      [98, 99, 115, 116,
       11, 0, 0, 128,
       116, 116, 108, 0, 1, 0, 0, 0, 1, 104, 111, 112, 115, 1, 0, 0, 0, 0, 102, 114, 111, 109, 16, 0, 0, 0, 185, 158, 181, 225, 33, 131, 76, 251, 147, 47, 21, 102, 31, 180, 15, 234, 118, 101, 114, 115, 4, 0, 0, 0, 194, 4, 0, 0, 118, 114, 118, 112, 4, 0, 0, 0, 27, 0, 0, 0, 118, 101, 120, 112, 2, 0, 0, 0, 83, 84, 118, 101, 120, 110, 2, 0, 0, 0, 36, 1, 99, 105, 100, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 103, 114, 112, 0, 1, 0, 0, 0, 1, 99, 104, 97, 110, 4, 0, 0, 128, 105, 100, 0, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 98, 99, 105, 100, 16, 0, 0, 0, 0, 34, 221, 27, 49, 232, 71, 189, 174, 211, 217, 44, 20, 132, 33, 60, 105, 110, 102, 111, 6, 0, 0, 128, 110, 97, 109, 101, 31, 0, 0, 0, 227, 129, 151, 227, 129, 163, 227, 129, 139, 227, 130, 138, 227, 130, 183, 227, 131, 165, 227, 131, 188, 227, 131, 171, 239, 189, 131, 239, 189, 136, 0, 117, 114, 108, 0, 19, 0, 0, 0, 227, 130, 179, 227, 131, 179, 227, 130, 191, 227, 130, 175, 227, 131, 136, 85, 82, 76, 0, 103, 110, 114, 101, 13, 0, 0, 0, 227, 130, 184, 227, 131, 163, 227, 131, 179, 227, 131, 171, 0, 100, 101, 115, 99, 7, 0, 0, 0, 230, 166, 130, 232, 166, 129, 0, 99, 109, 110, 116, 22, 0, 0, 0, 233, 133, 141, 228, 191, 161, 232, 128, 133, 227, 130, 179, 227, 131, 161, 227, 131, 179, 227, 131, 136, 0, 98, 105, 116, 114, 4, 0, 0, 0, 210, 4, 0, 0, 116, 114, 99, 107, 5, 0, 0, 128, 116, 105, 116, 108, 13, 0, 0, 0, 227, 130, 191, 227, 130, 164, 227, 131, 136, 227, 131, 171, 0, 103, 110, 114, 101, 13, 0, 0, 0, 227, 130, 184, 227, 131, 163, 227, 131, 179, 227, 131, 171, 0, 97, 108, 98, 109, 13, 0, 0, 0, 227, 130, 162, 227, 131, 171, 227, 131, 144, 227, 131, 160, 0, 99, 114, 101, 97, 19, 0, 0, 0, 227, 130, 162, 227, 131, 188, 227, 131, 134, 227, 130, 163, 227, 130, 185, 227, 131, 136, 0, 117, 114, 108, 0, 4, 0, 0, 0, 85, 82, 76, 0, 104, 111, 115, 116, 12, 0, 0, 128, 99, 105, 100, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 105, 100, 0, 0, 16, 0, 0, 0, 185, 158, 181, 225, 33, 131, 76, 251, 147, 47, 21, 102, 31, 180, 15, 234, 105, 112, 0, 0, 4, 0, 0, 0, 5, 11, 168, 192, 112, 111, 114, 116, 2, 0, 0, 0, 184, 35, 110, 117, 109, 108, 4, 0, 0, 0, 0, 0, 0, 0, 110, 117, 109, 114, 4, 0, 0, 0, 0, 0, 0, 0, 117, 112, 116, 109, 4, 0, 0, 0, 0, 0, 0, 0, 118, 101, 114, 0, 4, 0, 0, 0, 194, 4, 0, 0, 118, 101, 118, 112, 4, 0, 0, 0, 27, 0, 0, 0, 118, 101, 120, 112, 2, 0, 0, 0, 83, 84, 118, 101, 120, 110, 2, 0, 0, 0, 36, 1, 102, 108, 103, 49, 1, 0, 0, 0, 15, 98, 99, 115, 116, 11, 0, 0, 128, 116, 116, 108, 0, 1, 0, 0, 0, 1, 104, 111, 112, 115, 1, 0, 0, 0, 0, 102, 114, 111, 109, 16, 0, 0, 0, 185, 158, 181, 225, 33, 131, 76, 251, 147, 47, 21, 102, 31, 180, 15, 234, 118, 101, 114, 115, 4, 0, 0, 0, 194, 4, 0, 0, 118, 114, 118, 112, 4, 0, 0, 0, 27, 0, 0, 0, 118, 101, 120, 112, 2, 0, 0, 0, 83, 84, 118, 101, 120, 110, 2, 0, 0, 0, 36, 1, 99, 105, 100, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 103, 114, 112, 0, 1, 0, 0, 0, 1, 99, 104, 97, 110, 4, 0, 0, 128, 105, 100, 0, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 98, 99, 105, 100, 16, 0, 0, 0, 0, 34, 221, 27, 49, 232, 71, 189, 174, 211, 217, 44, 20, 132, 33, 60, 105, 110, 102, 111, 6, 0, 0, 128, 110, 97, 109, 101, 31, 0, 0, 0, 227, 129, 151, 227, 129, 163, 227, 129, 139, 227, 130, 138, 227, 130, 183, 227, 131, 165, 227, 131, 188, 227, 131, 171, 239, 189, 131, 239, 189, 136, 0, 117, 114, 108, 0, 19, 0, 0, 0, 227, 130, 179, 227, 131, 179, 227, 130, 191, 227, 130, 175, 227, 131, 136, 85, 82, 76, 0, 103, 110, 114, 101, 13, 0, 0, 0, 227, 130, 184, 227, 131, 163, 227, 131, 179, 227, 131, 171, 0, 100, 101, 115, 99, 7, 0, 0, 0, 230, 166, 130, 232, 166, 129, 0, 99, 109, 110, 116, 22, 0, 0, 0, 233, 133, 141, 228, 191, 161, 232, 128, 133, 227, 130, 179, 227, 131, 161, 227, 131, 179, 227, 131, 136, 0, 98, 105, 116, 114, 4, 0, 0, 0, 210, 4, 0, 0, 116, 114, 99, 107, 5, 0, 0, 128, 116, 105, 116, 108, 13, 0, 0, 0, 227, 130, 191, 227, 130, 164, 227, 131, 136, 227, 131, 171, 0, 103, 110, 114, 101, 13, 0, 0, 0, 227, 130, 184, 227, 131, 163, 227, 131, 179, 227, 131, 171, 0, 97, 108, 98, 109, 13, 0, 0, 0, 227, 130, 162, 227, 131, 171, 227, 131, 144, 227, 131, 160, 0, 99, 114, 101, 97, 19, 0, 0, 0, 227, 130, 162, 227, 131, 188, 227, 131, 134, 227, 130, 163, 227, 130, 185, 227, 131, 136, 0, 117, 114, 108, 0, 4, 0, 0, 0, 85, 82, 76, 0, 104, 111, 115, 116, 12, 0, 0, 128, 99, 105, 100, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 105, 100, 0, 0, 16, 0, 0, 0, 185, 158, 181, 225, 33, 131, 76, 251, 147, 47, 21, 102, 31, 180, 15, 234, 105, 112, 0, 0, 4, 0, 0, 0, 5, 11, 168, 192, 112, 111, 114, 116, 2, 0, 0, 0, 184, 35, 110, 117, 109, 108, 4, 0, 0, 0, 0, 0, 0, 0, 110, 117, 109, 114, 4, 0, 0, 0, 0, 0, 0, 0, 117, 112, 116, 109, 4, 0, 0, 0, 0, 0, 0, 0, 118, 101, 114, 0, 4, 0, 0, 0, 194, 4, 0, 0, 118, 101, 118, 112, 4, 0, 0, 0, 27, 0, 0, 0, 118, 101, 120, 112, 2, 0, 0, 0, 83, 84, 118, 101, 120, 110, 2, 0, 0, 0, 36, 1, 102, 108, 103, 49, 1, 0, 0, 0, 15, 98, 99, 115, 116, 11, 0, 0, 128, 116, 116, 108, 0, 1, 0, 0, 0, 1, 104, 111, 112, 115, 1, 0, 0, 0, 0, 102, 114, 111, 109, 16, 0, 0, 0, 185, 158, 181, 225, 33, 131, 76, 251, 147, 47, 21, 102, 31, 180, 15, 234, 118, 101, 114, 115, 4, 0, 0, 0, 194, 4, 0, 0, 118, 114, 118, 112, 4, 0, 0, 0, 27, 0, 0, 0, 118, 101, 120, 112, 2, 0, 0, 0, 83, 84, 118, 101, 120, 110, 2, 0, 0, 0, 36, 1, 99, 105, 100, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 103, 114, 112, 0, 1, 0, 0, 0, 1, 99, 104, 97, 110, 4, 0, 0, 128, 105, 100, 0, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 98, 99, 105, 100, 16, 0, 0, 0, 0, 34, 221, 27, 49, 232, 71, 189, 174, 211, 217, 44, 20, 132, 33, 60, 105, 110, 102, 111, 6, 0, 0, 128, 110, 97, 109, 101, 31, 0, 0, 0, 227, 129, 151, 227, 129, 163, 227, 129, 139, 227, 130, 138, 227, 130, 183, 227, 131, 165, 227, 131, 188, 227, 131, 171, 239, 189, 131, 239, 189, 136, 0, 117, 114, 108, 0, 19, 0, 0, 0, 227, 130, 179, 227, 131, 179, 227, 130, 191, 227, 130, 175, 227, 131, 136, 85, 82, 76, 0, 103, 110, 114, 101, 13, 0, 0, 0, 227, 130, 184, 227, 131, 163, 227, 131, 179, 227, 131, 171, 0, 100, 101, 115, 99, 7, 0, 0, 0, 230, 166, 130, 232, 166, 129, 0, 99, 109, 110, 116, 22, 0, 0, 0, 233, 133, 141, 228, 191, 161, 232, 128, 133, 227, 130, 179, 227, 131, 161, 227, 131, 179, 227, 131, 136, 0, 98, 105, 116, 114, 4, 0, 0, 0, 210, 4, 0, 0, 116, 114, 99, 107, 5, 0, 0, 128, 116, 105, 116, 108, 13, 0, 0, 0, 227, 130, 191, 227, 130, 164, 227, 131, 136, 227, 131, 171, 0, 103, 110, 114, 101, 13, 0, 0, 0, 227, 130, 184, 227, 131, 163, 227, 131, 179, 227, 131, 171, 0, 97, 108, 98, 109, 13, 0, 0, 0, 227, 130, 162, 227, 131, 171, 227, 131, 144, 227, 131, 160, 0, 99, 114, 101, 97, 19, 0, 0, 0, 227, 130, 162, 227, 131, 188, 227, 131, 134, 227, 130, 163, 227, 130, 185, 227, 131, 136, 0, 117, 114, 108, 0, 4, 0, 0, 0, 85, 82, 76, 0, 104, 111, 115, 116, 12, 0, 0, 128, 99, 105, 100, 0, 16, 0, 0, 0, 185, 232, 59, 185, 80, 214, 191, 35, 2, 2, 176, 79, 192, 123, 37, 144, 105, 100, 0, 0, 16, 0, 0, 0, 185, 158, 181, 225, 33, 131, 76, 251, 147, 47, 21, 102, 31, 180, 15, 234, 105, 112, 0, 0, 4, 0, 0, 0, 5, 11, 168, 192, 112, 111, 114, 116, 2, 0, 0, 0, 184, 35, 110, 117, 109, 108, 4, 0, 0, 0, 0, 0, 0, 0, 110, 117, 109, 114, 4, 0, 0, 0, 0, 0, 0, 0, 117, 112, 116, 109, 4, 0, 0, 0, 0, 0, 0, 0, 118, 101, 114, 0, 4, 0, 0, 0, 194, 4, 0, 0, 118, 101, 118, 112, 4, 0, 0, 0, 27, 0, 0, 0, 118, 101, 120, 112, 2, 0, 0, 0, 83, 84, 118, 101, 120, 110, 2, 0, 0, 0, 36, 1, 102, 108, 103, 49, 1, 0, 0, 0, 15].to_bytes
    end

    it do
      expect(atom.type).to eq "bcst"
      expect(atom.has_children?).to eq true
      expect(atom.size).to eq 11
      expect(atom.children.size).to eq 11
      # expect(atom.data.to_s).to eq '022DD1B31E847BDAED3D92C1484213C'
      # pp data: atom.data
    end
  end
end
